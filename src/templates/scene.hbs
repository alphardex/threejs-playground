import * as THREE from "three";
import { Base } from "./base";
import {{name}}VertexShader from "../shaders/{{name}}/vertex.glsl";
import {{name}}FragmentShader from "../shaders/{{name}}/fragment.glsl";

class {{nameUpper}} extends Base {
  clock: THREE.Clock;
  {{name}}Material: THREE.ShaderMaterial;
  constructor(sel: string, debug: boolean) {
    super(sel, debug);
    this.clock = new THREE.Clock();
    this.cameraPosition = new THREE.Vector3(0, 0, 1);
  }
  // 初始化
  init() {
    this.createScene();
    this.createPerspectiveCamera();
    this.createRenderer();
    this.create{{nameUpper}}Material();
    this.createPlane();
    this.createLight();
    this.mouseTracker.trackMousePos();
    this.createOrbitControls();
    this.addListeners();
    this.setLoop();
  }
  // 创建材质
  create{{nameUpper}}Material() {
    const {{name}}Material = new THREE.ShaderMaterial({
      vertexShader: {{name}}VertexShader,
      fragmentShader: {{name}}FragmentShader,
      side: THREE.DoubleSide,
      uniforms: {
        uTime: {
          value: 0,
        },
        uMouse: {
          value: new THREE.Vector2(0, 0),
        },
        uResolution: {
          value: new THREE.Vector2(window.innerWidth, window.innerHeight),
        },
      },
    });
    this.{{name}}Material = {{name}}Material;
  }
  // 创建平面
  createPlane() {
    const geometry = new THREE.PlaneBufferGeometry(1, 1, 100, 100);
    const material = this.{{name}}Material;
    this.createMesh({
      geometry,
      material,
    });
  }
  // 动画
  update() {
    const elapsedTime = this.clock.getElapsedTime();
    const mousePos = this.mousePos;
    if (this.{{name}}Material) {
      this.{{name}}Material.uniforms.uTime.value = elapsedTime;
      this.{{name}}Material.uniforms.uMouse.value = mousePos;
    }
  }
}

export default {{nameUpper}};
